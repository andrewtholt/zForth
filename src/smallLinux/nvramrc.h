
// Autogenerated, do not edit

#ifndef __ATL_SRC
#define __ATL_SRC

char *nvramrc[] = {(char *)": emit 0 sys ;",
(char *)": . 1 sys ;",
(char *)": tell 2 sys ;",
(char *)": quit 128 sys ;",
(char *)": sin 129 sys ;",
(char *)": include 130 sys ;",
(char *)": save 131 sys ;",
(char *)": ! 0 !! ;",
(char *)": @ 0 @@ ;",
(char *)": , 0 ,, ;",
(char *)": # 0 ## ;",
(char *)": [ 0 compiling ! ; immediate",
(char *)": ] 1 compiling ! ;",
(char *)": postpone 1 _postpone ! ; immediate",
(char *)": over 1 pick ;",
(char *)": +! dup @ rot + swap ! ;",
(char *)": inc 1 swap +! ;",
(char *)": dec -1 swap +! ;",
(char *)": < - <0 ;",
(char *)": > swap < ;",
(char *)": <= over over >r >r < r> r> = + ;",
(char *)": >= swap <= ;",
(char *)": =0 0 = ;",
(char *)": not =0 ;",
(char *)": != = not ;",
(char *)": cr 10 emit ;",
(char *)": .. dup . ;",
(char *)": here h @ ;",
(char *)": allot h +! ;",
(char *)": variable : postpone [ ' lit , here dup 5 + , ' exit , here swap ! 5 allot ;",
(char *)": begin here ; immediate",
(char *)": again ' jmp , , ; immediate",
(char *)": until ' jmp0 , , ; immediate",
(char *)": times ' 1 - , ' dup , ' =0 , postpone until ; immediate",
(char *)": if ' jmp0 , here 999 , ; immediate",
(char *)": unless ' not , postpone if ; immediate",
(char *)": else ' jmp , here 999 , swap here swap ! ; immediate",
(char *)": fi here swap ! ; immediate",
(char *)": then here swap ! ; immediate",
(char *)": i ' lit , 0 , ' pickr , ; immediate",
(char *)": j ' lit , 2 , ' pickr , ; immediate",
(char *)": do ' swap , ' >r , ' >r , here ; immediate",
(char *)": loop+ ' r> , ' + , ' dup , ' >r , ' lit , 1 , ' pickr , ' > , ' jmp0 , , ' r> , ' drop , ' r> , ' drop , ; immediate",
(char *)": loop ' lit , 1 , postpone loop+ ; immediate",
(char *)": s\" compiling @ if ' lits , here 0 , fi here begin key dup 34 = if drop",
(char *)"compiling @ if here swap - swap ! else dup here swap - fi exit else , fi",
(char *)"again ; immediate",
(char *)": .\" compiling @ if postpone s\" ' tell , else begin key dup 34 = if drop exit else emit fi again",
(char *)"fi ; immediate",
(char *)".\" Welcome to zForth, \" here . .\" bytes used\" cr ;",
(char *)"located at that address )",
(char *)": next dup # + ;",
(char *)": name dup @ 31 and swap next dup next rot tell @ ;",
(char *)": words latest @ begin name 32 emit dup 0 = until cr drop ;",
};

#endif

